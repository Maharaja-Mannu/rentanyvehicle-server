{"version":3,"sources":["reducer/authReducer.js","actionTypes.js","component/Header.js","reducer/reducer.js","api.js","customHook.js","component/CustomInput.js","component/Home.js","component/validationSchema.js","component/formComponent/VehicleDetails.js","component/formComponent/UploadImg.js","component/formComponent/Review.js","component/SubmitAd.js","component/Signin.js","component/Signup.js","component/UpdateAd.js","component/MyAccount.js","component/Logout.js","component/NoMatch.js","component/Details.js","App.js","serviceWorker.js","index.js"],"names":["authReducer","state","action","type","isLoading","token","message","payload","user","name","isAuthenticated","text","Error","Header","auth","Navbar","bg","expand","Container","Brand","className","to","Toggle","aria-controls","Collapse","id","Nav","reducer","error","data","login","values","a","fetch","Request","method","headers","body","JSON","stringify","response","ok","json","result","errMsg","signup","logout","loadData","url","submitAd","formData","res","updateAd","deleteAd","useDataAPI","initialUrl","initalData","useState","setUrl","useReducer","dispatch","useEffect","fetchData","Input","label","icon","props","useField","field","meta","Form","Group","Label","htmlFor","Control","isInvalid","touched","Feedback","Select","as","CheckInput","Check","defaultChecked","value","validationSchema","object","shape","origin","string","required","max","destination","date","CardAd","length","map","item","index","_id","key","Card","Img","variant","src","images","Body","Text","Home","initialValues","category","Date","toLocaleDateString","split","reverse","join","content","onSubmit","actions","myRequest","setSubmitting","handleSubmit","isSubmitting","noValidate","inline","Row","xs","md","Col","placeholder","Button","disabled","submitAdValidationSchema","brand","mixed","updateAdValidationSchema","signinValidationSchema","username","password","VehicleDetail","UploadImg","imgUrl","setImgUrl","setFieldValue","useFormikContext","File","onChange","event","currentTarget","files","e","reader","FileReader","file","target","onloadend","readAsDataURL","_handleImageChange","Image","thumbnail","alt","width","Review","reviewContent","Object","entries","readOnly","steps","SubmitAd","React","activeStep","setActiveStep","isLastStep","msg","setMsg","handleBack","Alert","Heading","model","reg_number","FormData","append","submitForm","document","documentElement","scrollTo","top","behavior","setTouched","style","maxWidth","step","getStepContent","onClick","Signin","history","useHistory","from","useLocation","pathname","handleLogin","localStorage","setItem","replace","email","min","cnfpwd","Signiup","location","handleSignup","UpdateAd","setData","useParams","getItem","handleUpdate","resmsg","MyAccount","useRouteMatch","path","defaultActiveKey","MyAd","isDeleting","setDeleting","handleDelete","console","match","position","right","Logout","removeItem","handleLogout","NoMatch","Details","PrivateRoute","children","rest","render","App","initalState","exact","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","StrictMode","getElementById","URL","process","href","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1871d885.chunk.js","sourcesContent":["import { LOGIN_INIT, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_INIT, LOGOUT_SUCCESS, LOGOUT_FAILURE   } from \"../actionTypes\";\r\n\r\nconst authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_INIT:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                token: null,\r\n                message: {}\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                token: action.payload.token,\r\n                user: action.payload.user.name,\r\n                isAuthenticated: true,\r\n                message: {}\r\n            }\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                message: {type: action.type, text: action.payload}\r\n            }\r\n        case LOGOUT_INIT:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                message: {}\r\n            }\r\n\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                token: null,\r\n                user: '',\r\n                isAuthenticated: false,\r\n                message: {type: action.type, text: action.payload}\r\n            }\r\n        case LOGOUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                message: {type: action.type, text: action.payload}\r\n            }\r\n\r\n        default:\r\n            throw new Error(\"Invalid actionType\")\r\n    }\r\n}\r\nexport default authReducer;","export const FETCH_INIT = 'FETCH_INIT'\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS'\r\nexport const FETCH_FAILURE = 'FETCH_FAILURE'\r\nexport const LOGIN_INIT = 'LOGIN_INIT'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE'\r\nexport const LOGOUT_INIT = 'LOGOUT_INIT'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE'\r\n\r\n\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\nexport default function Header({auth}) {\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"md\">\r\n            <Container>\r\n                <Navbar.Brand><NavLink className=\"brand-nav-link\" to=\"/\">M &amp; M</NavLink></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\r\n                        <NavLink className=\"nav-link\" to=\"/submitad\">Submit Ad</NavLink>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\">\r\n                        {auth.isAuthenticated ? (\r\n                            <>\r\n                                <NavLink className=\"nav-link mr-2\" to=\"/user\">{auth.user}</NavLink>\r\n                                <NavLink className=\"nav-link\" to=\"/user/logout\">Log out</NavLink>\r\n                            </>\r\n                        ): (\r\n                            <>\r\n                                <NavLink className=\"nav-link\" to=\"/signin\">Sign In</NavLink>\r\n                                <NavLink className=\"nav-link\" to=\"/signup\">Sign Up</NavLink>\r\n                            </>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}","import { FETCH_INIT, FETCH_SUCCESS, FETCH_FAILURE } from \"../actionTypes\";\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case FETCH_INIT:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                error: ''\r\n            }\r\n        case FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                data: action.payload.data,\r\n\r\n            }\r\n        case FETCH_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n","export const login = async (values) => {\r\n    const response = await fetch(new Request('/signin', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values, null, 2)\r\n    }))\r\n    if (response.ok) {\r\n        const result = await response.json()\r\n        return result\r\n    }\r\n    const errMsg = await response.text()\r\n    throw new Error(errMsg)\r\n}\r\n\r\nexport const signup = async (values) => {\r\n    const response = await fetch(new Request('/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(values, null, 2)\r\n    }))\r\n    if (response.ok) {\r\n        const result = await response.json()\r\n        return result\r\n    }\r\n    const errMsg = await response.text()\r\n    throw new Error(errMsg)\r\n}\r\n\r\nexport const logout = async (token) => {\r\n    const response = await fetch(new Request('/user/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n    }))\r\n    if (response.ok) {\r\n        const result = await response.text()\r\n        return result\r\n    }\r\n    const errMsg = await response.text()\r\n    throw new Error(errMsg)\r\n}\r\n\r\nexport const loadData = async (url) => {\r\n    const response = await fetch(url)\r\n    if (response.ok) {\r\n        const result = await response.json()\r\n        return result\r\n    }\r\n    const errMsg = await response.text()\r\n    throw new Error(errMsg)\r\n}\r\n\r\nexport const submitAd = async (formData, token) => {\r\n    const res = await fetch(new Request('/submitad', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Authorization': token\r\n        },\r\n        body: formData\r\n    }))\r\n    if (res.ok) {\r\n        const result = await res.json()\r\n        return result\r\n    }\r\n    const error = await res.text()\r\n    throw new Error(error)\r\n}\r\n\r\nexport const updateAd = async (id, token, values) => {\r\n    const res = await fetch(new Request(`/vehicle/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        },\r\n        body: JSON.stringify(values, null, 2)\r\n    }))\r\n    if (res.ok) {\r\n        const result = await res.text()\r\n        return result\r\n    }\r\n    throw new Error(await res.text())\r\n}\r\n\r\nexport const deleteAd = async (token, id) => {\r\n    const res = await fetch(new Request(`/vehicle/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n           'Authorization': token\r\n       } \r\n    }))\r\n    if (res.ok) {\r\n        const result = await res.text()\r\n        return result\r\n    }\r\n    const error = await res.text()\r\n    throw new Error(error)\r\n}","import { useState, useReducer, useEffect } from \"react\"\r\nimport { reducer } from './reducer/reducer'\r\nimport { FETCH_INIT, FETCH_SUCCESS, FETCH_FAILURE } from \"./actionTypes\";\r\nimport { loadData } from \"./api\";\r\n\r\nexport const useDataAPI = (initialUrl, initalData) => {\r\n    const [url, setUrl] = useState(initialUrl)\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        isLoading: false,\r\n        error: '',\r\n        data: initalData,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            dispatch({ type: FETCH_INIT })\r\n            try {\r\n                const result = await loadData(url)\r\n                dispatch({\r\n                    type: FETCH_SUCCESS,\r\n                    payload: result\r\n                })\r\n            } catch (error) {\r\n                dispatch({ type: FETCH_FAILURE, payload: `Error: ${error.message}` })\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [url])\r\n    return [state, setUrl]\r\n}","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { useField} from 'formik'\r\n\r\nexport const Input = ({ label, icon, ...props }) => {\r\n    const [field, meta] = useField(props.name)\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label htmlFor={props.id || props.name}>{label}</Form.Label>\r\n            {icon && <span className=\"icon material-icons\">{icon}</span>}\r\n            <Form.Control {...field} {...props} isInvalid={meta.touched && meta.error} />\r\n            <Form.Control.Feedback type='invalid'>{meta.error}</Form.Control.Feedback>\r\n\r\n        </Form.Group>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport const Select = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props.name);\r\n    return (\r\n        <Form.Group>\r\n            <Form.Label htmlFor={props.id || props.name}>{label}</Form.Label>\r\n            <Form.Control as='select' {...field} {...props} isInvalid={meta.touched && meta.error} />\r\n            <Form.Control.Feedback type='invalid'>{meta.error}</Form.Control.Feedback>\r\n        </Form.Group>\r\n    );\r\n};\r\n\r\nexport const CheckInput = (props) => {\r\n    const [field] = useField(props.name);\r\n    return (\r\n        <Form.Check {...field} {...props} defaultChecked={field.value === props.value ? true: false} />\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Formik } from 'formik'\r\nimport {object, string, date} from 'yup'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport { useDataAPI } from '../customHook';\r\nimport { CheckInput, Input } from './CustomInput';\r\n\r\nconst validationSchema = object().shape({\r\n    origin: string().required().max(20, 'Must be 20 characters or less'),\r\n    destination: string().required().max(20, 'Must be 20 characters or less'),\r\n    date: date().required()\r\n})\r\n\r\nfunction Home() {\r\n  \r\n    let date = new Date().toLocaleDateString('en-GB')\r\n    const initialValues = {\r\n        category: 'Car',\r\n        origin: 'Poreyahat',\r\n        destination: 'Deoghar',\r\n        date: date.split('/').reverse().join('-')\r\n    }\r\n    const [state, setUrl] = useDataAPI(new Request('/vehicle', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(initialValues, null, 2) \r\n    }), [])\r\n\r\n    function _handleSubmit(values, actions) {\r\n        const myRequest = new Request('/vehicle', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(values, null, 2),\r\n        });\r\n        setUrl(myRequest)\r\n        actions.setSubmitting(false)\r\n    }\r\n\r\n    const content = <CardAd state={state} />\r\n\r\n\r\n    return (\r\n        <div className='container my-3'>\r\n            <div className='search-form'>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={_handleSubmit}\r\n                >\r\n                    {({ handleSubmit, isSubmitting })=> (\r\n\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <div className='pt-3'>\r\n                                <CheckInput inline label=\"Car\" type=\"radio\" id=\"rb\" name=\"category\" value='Car' />\r\n                                <CheckInput inline label=\"Bus\" type=\"radio\" id=\"rb2\" name=\"category\" value='Bus' />\r\n                                <CheckInput inline label=\"Truck\" type=\"radio\" id=\"rb3\" name=\"category\" value=\"Truck\" />\r\n                            </div>\r\n                            <Row xs={2} md={3}>\r\n                                <Col>\r\n                                    <Input type='text' placeholder='Origin' name='origin' className='__p-2'/>\r\n                                </Col>\r\n                                <Col>\r\n                                    {/* <span className=\"icon material-icons\">place</span> */}\r\n                                    <Input type='text' placeholder='Destination' name='destination' className='__p-2'/>\r\n                                </Col>\r\n                                <Col xs={12} className=\"mt-2 mt-md-0\" >\r\n                                    <Input type='date' name='date'/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type='submit' className='btn-search' disabled={isSubmitting}>Search</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n\r\n            <div className='row my-4 px-3'>\r\n                {state.isLoading ? <p className='text-primary'>Loading...</p> : content}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CardAd = ({ state }) => {\r\n    if (state.error) {\r\n        return (<p className='text-danger'>{state.error}</p>)\r\n    }\r\n    else if (state.data.length < 1) {\r\n        return (<p>No result Found</p>)\r\n    }\r\n    return (\r\n        state.data.map((item, index) => (\r\n            <NavLink to={`/vehicle/${item._id}`} key={index} className=\"col-6 col-sm-4 p-2\">\r\n                <Card key={index} >\r\n                    <Card.Img variant=\"top\" src={`avatar/${item.images}`} />\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                        {item.origin}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </NavLink>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { string, object, mixed } from 'yup'\r\n\r\nexport const submitAdValidationSchema = [\r\n    object().shape({\r\n        category: string().required(),\r\n        brand: string().required(),\r\n        origin: string().required(),\r\n    }),\r\n    object().shape({\r\n        images: mixed().required()\r\n    })\r\n]\r\n\r\nexport const updateAdValidationSchema = object().shape({\r\n    category: string().required()\r\n})\r\n\r\nexport const signinValidationSchema = object().shape({\r\n    username: string().required('Required'),\r\n    password: string().required('Required')\r\n})","import React from 'react'\r\nimport {Input, Select, CheckInput} from '../CustomInput'\r\n\r\n\r\nexport default function VehicleDetail() {\r\n    return (\r\n        <>\r\n            <div className=\"py-2\">\r\n                <label>Choose category</label>\r\n                <div>\r\n                    <CheckInput inline type='radio' name='category' value='Car' id='rb' label='Car' />\r\n                    <CheckInput inline type='radio' name='category' value='Bus' id='rb1' label='Bus' />\r\n                    <CheckInput inline type='radio' name='category' value='Truck' id='rb2' label='Truck' />\r\n                </div>\r\n            </div>\r\n\r\n            <Select name='brand' label=\"Brand\" id='brand'>\r\n                <option>Choose brand</option>\r\n                <option>Volvo</option>\r\n                <option>Suzuki</option>\r\n                <option>Honda</option>\r\n            </Select>\r\n            <Select name='model' label=\"Model\" id='model'>\r\n                <option>Choose Model</option>\r\n                <option>Q3</option>\r\n                <option>Dezire</option>\r\n                <option>Brizza</option>\r\n            </Select>\r\n            <Input type='text' name='reg_number' label='Vehicle Registration Number' id='reg_no' placeholder='e.g. JH 17G 8737' />\r\n            <Input type='text' name='origin' label='Origin City' placeholder='Enter origin city (or village) name' />\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Image from 'react-bootstrap/Image'\r\nimport {useFormikContext} from 'formik'\r\n\r\nexport default function UploadImg({imgUrl, setImgUrl}) {\r\n    \r\n    const { setFieldValue} = useFormikContext()\r\n    function _handleImageChange(e) {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n        reader.onloadend = () => {\r\n            setImgUrl(reader.result);\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Form.Group>\r\n                <Form.File label=\"Upload Image\" name='images' onChange={(event) => {\r\n                    setFieldValue(\"images\", event.currentTarget.files[0]);\r\n                    _handleImageChange(event)\r\n                }} />\r\n            </Form.Group>\r\n            {imgUrl && <Image src={imgUrl} thumbnail alt='Upload vehicle' width='200' />}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { useFormikContext } from 'formik'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nexport default function Review({imgUrl}) {\r\n    const {values} = useFormikContext()\r\n    const myValues = Object.entries(values) //  returns an array of a given object's own enumerable string-keyed property [ key , value ] pairs\r\n    const reviewContent = myValues.map((value, index) => value[0] === \"images\" ? (\r\n    <Form.Group key={index}>\r\n        <Form.Label>{value[0]}</Form.Label>\r\n        <Image src={imgUrl} alt=\"vehicle\" width=\"200\" />\r\n    </Form.Group>\r\n    ) : (\r\n        <Form.Group key={index}>\r\n            <Form.Label>{value[0]}</Form.Label>\r\n            <Form.Control  type='text' value={value[1]} readOnly />\r\n        </Form.Group>\r\n    ))\r\n    return (\r\n        <>\r\n            <h2>Review &amp; Submit</h2>\r\n            {reviewContent}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Formik } from 'formik'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from 'react-bootstrap/Container'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport {submitAdValidationSchema} from './validationSchema'\r\nimport VehicleDetail from './formComponent/VehicleDetails'\r\nimport UploadImg from './formComponent/UploadImg'\r\nimport Review from './formComponent/Review'\r\nimport { submitAd } from '../api';\r\n\r\n\r\nconst steps = ['Vehicle detail', 'Upload photos', 'Review and Submit'];\r\n\r\n\r\nexport default function SubmitAd({auth}) {\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const isLastStep = activeStep === steps.length - 1 \r\n    const [msg, setMsg] = React.useState({})\r\n    const [imgUrl, setImgUrl] = React.useState('')\r\n\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return <VehicleDetail />;\r\n            case 1:\r\n                return <UploadImg imgUrl={imgUrl} setImgUrl={setImgUrl}/>;\r\n            case 2:\r\n                return <Review imgUrl={imgUrl} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    function _handleSubmit(values, actions) {\r\n        if (isLastStep) {\r\n            // reset response message\r\n            setMsg({})\r\n            const formData = new FormData()\r\n            for (const key in values) {\r\n                formData.append(key, values[key])\r\n            }\r\n            // submit the form\r\n            const submitForm = async () => {\r\n                try {\r\n                    const result = await submitAd(formData, auth.token)\r\n                    setMsg({\r\n                        type: 'success',\r\n                        text: `Your Ad with id: ${result._id} is created successfully.`\r\n                    })\r\n                } catch (error) {\r\n                    setMsg({\r\n                        type: 'danger',\r\n                        text: error.message\r\n                    })\r\n                }\r\n                actions.setSubmitting(false)\r\n            }\r\n            submitForm()\r\n            document.documentElement.scrollTo({ top: 0, behavior: 'smooth' })\r\n\r\n        }else {\r\n            setActiveStep(activeStep + 1)\r\n            actions.setTouched({})\r\n            actions.setSubmitting(false)\r\n        }\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <Container className='py-2'>\r\n            {msg.text && <Alert variant={msg.type}>\r\n                <Alert.Heading>{msg.type === 'success' ? 'Success' : 'Error' }</Alert.Heading>\r\n                <p>{msg.text}</p>\r\n            </Alert>}\r\n            <Formik\r\n                initialValues={{\r\n                    category: 'Car',\r\n                    brand: 'Suzuki',\r\n                    model: 'Dezire',\r\n                    origin: 'Poreyahat',\r\n                    reg_number: '',\r\n                    images: null,\r\n                }}\r\n                validationSchema={submitAdValidationSchema[activeStep]}\r\n                onSubmit={_handleSubmit}\r\n                >\r\n                {({ handleSubmit, isSubmitting }) => (\r\n\r\n                    <Form onSubmit={handleSubmit} >\r\n                        <div className=\"bg-light py-1\">\r\n                            <ul id=\"progressbar\">\r\n                                {steps.map((label, index) => <li key={index} className={index <= activeStep ? 'active': ''}>{label}</li>)}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"py-2 m-auto\" style={{maxWidth: \"40rem\"}}>\r\n                            {getStepContent(activeStep)}\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            {activeStep !== 0 && (\r\n                                <Button onClick={handleBack}>Back</Button>\r\n                            )}{' '}\r\n                            <Button type='submit' disabled={isSubmitting}>\r\n                                {isLastStep ? 'Submit': 'Next'} \r\n                            </Button> \r\n                        </div>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\"\r\nimport {Formik} from \"formik\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { Input } from \"./CustomInput\";\r\nimport {signinValidationSchema } from './validationSchema'\r\nimport { LOGIN_INIT, LOGIN_SUCCESS, LOGIN_FAILURE } from \"../actionTypes\";\r\nimport {login} from \"../api\"\r\n\r\nexport default function Signin({auth, dispatch}) {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let { from } = location.state || { from: { pathname: \"/user\" } };\r\n    const message = auth.message\r\n    // let login = () => {\r\n    //     props.handleLogin(null, null, () => {\r\n    //         history.replace(from);\r\n    //     });\r\n    // };\r\n\r\n    const handleLogin = async (values) => {\r\n        dispatch({type: LOGIN_INIT})\r\n        try {\r\n            const result = await login(values)\r\n            dispatch({type: LOGIN_SUCCESS, payload: result})\r\n            localStorage.setItem('token', result.token)\r\n            localStorage.setItem('user', result.user.name)\r\n            history.replace(from)\r\n        } catch (error) {\r\n            dispatch({type: LOGIN_FAILURE, payload: error.message})\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Formik\r\n                initialValues= {{\r\n                    username: '',\r\n                    password: '',\r\n                }}\r\n                validationSchema={signinValidationSchema}\r\n                onSubmit={handleLogin}\r\n                >\r\n                {({handleSubmit, isSubmitting}) => (\r\n                    <Form noValidate onSubmit={handleSubmit} className=\"col-sm-6 py-3\">\r\n                        {(message.type === LOGIN_FAILURE) && (\r\n                            <Alert variant=\"danger\">\r\n                                <Alert.Heading>Error</Alert.Heading>\r\n                                <p>{message.text}</p>\r\n                            </Alert>\r\n                        )}\r\n                        <h2>Sign In</h2>\r\n                        <Input label=\"Email\" type=\"email\" name=\"username\" placeholder=\"Enter email\" />\r\n                        <Input label=\"Password\" type=\"password\" name=\"password\" placeholder=\"Enter password\" />\r\n                        <Button type=\"submit\" disabled={isSubmitting}>{isSubmitting ? 'Loading...' : 'Sign in'}</Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </Container>\r\n    );\r\n   \r\n}","import React from \"react\";\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport {Formik} from \"formik\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Alert from \"react-bootstrap/Alert\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { string, object } from \"yup\"\r\nimport { Input } from \"./CustomInput\";\r\nimport { LOGIN_INIT, LOGIN_SUCCESS, LOGIN_FAILURE } from \"../actionTypes\";\r\nimport { signup } from \"../api\";\r\n\r\nconst validationSchema = object().shape({\r\n    name: string().required('Required'),\r\n    username: string().required('Required').email('Please enter valid email'),\r\n    password: string().required('Required').min(8, 'Password must be atleast 8 characters'),\r\n    cnfpwd: string().required('Required')\r\n})\r\nexport default function Signiup({auth, dispatch}) {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    const message = auth.message\r\n    let { from } = location.state || { from: { pathname: \"/user\" } };\r\n\r\n    const handleSignup = async (values) => {\r\n        dispatch({type: LOGIN_INIT})\r\n        try {\r\n            const result = await signup(values)\r\n            localStorage.setItem('token', result.token)\r\n            localStorage.setItem('user', result.user.name)\r\n            dispatch({type: LOGIN_SUCCESS, payload: result})\r\n            history.replace(from)\r\n        } catch (error) {\r\n            dispatch({type: LOGIN_FAILURE, payload: error.message})\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Formik\r\n                initialValues={{\r\n                    name: '',\r\n                    username: '',\r\n                    password: '',\r\n                    cnfpwd: ''\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSignup}\r\n            >\r\n                {({ handleSubmit, isSubmitting }) => (\r\n                    <Form noValidate onSubmit={handleSubmit} className=\"col-sm-6 py-3\">\r\n                        {(message.type === LOGIN_FAILURE) && (\r\n                            <Alert variant=\"danger\">\r\n                                <Alert.Heading>Error</Alert.Heading>\r\n                                <p>{message.text}</p>\r\n                            </Alert>\r\n                        )}\r\n                        <h2>Sign In</h2>\r\n                        <Input label=\"Name\" type=\"text\" name=\"name\" placeholder=\"Enter name\" />\r\n                        <Input label=\"Email\" type=\"email\" name=\"username\" placeholder=\"Enter email\" />\r\n                        <Input label=\"Password\" type=\"password\" name=\"password\" placeholder=\"Enter password\" />\r\n                        <Input label=\"Confirm Password\" type=\"password\" name=\"cnfpwd\" placeholder=\"Re-enter password\" />\r\n                        <Button type=\"submit\" disabled={isSubmitting}>{isSubmitting ? 'Loading...' : 'Sign up'}</Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </Container>\r\n    );\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport VehicleDetail from './formComponent/VehicleDetails'\r\nimport { Formik } from 'formik'\r\nimport { useParams } from 'react-router-dom'\r\nimport { updateAdValidationSchema } from './validationSchema'\r\nimport { loadData, updateAd } from '../api'\r\n\r\nexport default function UpdateAd() {\r\n    const [data, setData] = useState()\r\n    const [msg, setMsg] = useState()\r\n    const { id } = useParams()\r\n    const token = localStorage.getItem('token')\r\n    useEffect(()=> {\r\n        const fetchData = async () => {\r\n            try {\r\n                const {data} = await loadData(`/vehicle/${id}`)\r\n                setData(data)\r\n            } catch (error) {\r\n                setMsg({type: 'error', text: error.message})\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [id])\r\n\r\n    const handleUpdate = async (values) => {\r\n        setMsg()\r\n        try {\r\n            const resmsg = await updateAd(id, token, values)\r\n            setMsg({type: 'success', text: resmsg})\r\n        } catch (error) {\r\n            setMsg({type: 'error', text: error.message})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Update Ad</h4>\r\n            {msg && (\r\n                <Alert variant={msg.type === 'error' ? 'danger': 'success'}>\r\n                    <Alert.Heading>{ msg.type !== 'error' ? 'Success' : 'Error' }</Alert.Heading>\r\n                    <p>{msg.text}</p>\r\n                </Alert>\r\n            )}\r\n            { data ? (\r\n                <Formik\r\n                    initialValues={data}\r\n                    validationSchema={updateAdValidationSchema}\r\n                    onSubmit={handleUpdate}\r\n                    >\r\n                    {({handleSubmit, isSubmitting, }) => (\r\n\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <VehicleDetail />\r\n                            <Button type=\"submit\" disabled={isSubmitting}>{isSubmitting ? 'Loading...' : 'Update'}</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            ) : ( \r\n                !msg && <p className=\"text-primary\">Loading...</p>)\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Switch, Route, NavLink, Link, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { useDataAPI } from '../customHook'\r\nimport { deleteAd } from '../api'\r\nimport UpdateAd from './UpdateAd'\r\n\r\nexport default function MyAccount() {\r\n    let {path, url} = useRouteMatch()\r\n\r\n    return(\r\n        <Container>\r\n            <div className=\"row py-3\">\r\n                <div className=\"col-md-2 p-0\">\r\n                    <Nav defaultActiveKey=\"/\" className=\"flex-md-column\">\r\n                        <NavLink to={`${url}`} className=\"nav-link\">Ads</NavLink>\r\n                        <NavLink to={`${url}/vehicle`} className=\"nav-link\">Vehicle</NavLink>\r\n                    </Nav>\r\n                </div>\r\n                <div className=\"col-md-10 bg-light\">\r\n                    <Switch>\r\n                        <Route path={`${path}/update/:id`}>\r\n                            <UpdateAd />\r\n                        </Route>\r\n                        <Route path={`${path}/vehicle`}>\r\n                            <div><p>vehicle</p></div>\r\n                        </Route>\r\n                        <Route path={path}>\r\n                            <MyAd />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction MyAd() {\r\n    const [isDeleting, setDeleting] = React.useState(false)\r\n    // get token from localstorage\r\n    const token = localStorage.getItem('token')\r\n    // load all posts of the current user\r\n    const [state, setUrl] = useDataAPI(new Request('/user/ads', {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': token\r\n        }\r\n    }), [])\r\n\r\n    const handleDelete = async (id) => {\r\n        setDeleting(true)\r\n        try {\r\n            await deleteAd(token, id)\r\n            // after delete load all remaining posts\r\n            setUrl(new Request('/user/ads', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': token\r\n                }\r\n            }))\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n        setDeleting(false)\r\n    }\r\n\r\n    const content = <CardAd state={state} handleDelete={handleDelete} />\r\n\r\n    return (\r\n        <>\r\n            <h4>My Ads</h4>\r\n            {isDeleting && <div className=\"delete-alert\">\r\n                <h5 className=\"text-danger text-center\">Deleting...</h5>\r\n            </div>}\r\n            <div className='row my-4 px-3'>\r\n                {state.isLoading ? <p className='text-primary'>Loading...</p> : content}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction CardAd({state, handleDelete}) {\r\n    let match = useRouteMatch()\r\n    if (state.error) {\r\n        return (<p className='text-danger'>{state.error}</p>)\r\n    }\r\n    else if (state.data.length < 1) {\r\n        return (<p>No result Found</p>)\r\n    }\r\n    return (\r\n        state.data.map((item, index) => (\r\n            <Card className=\"col-6 col-sm-4 p-1\" key={index}>\r\n                <Card.Img variant=\"top\" src={`../avatar/${item.images}`} />\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        {item.origin}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <div style={{ position: \"absolute\", top: 0, right: 0 }}>\r\n                    <Link to={`${match.url}/update/${item._id}`}>\r\n                        <Button variant=\"light\">Edit</Button>\r\n                    </Link>\r\n                    <Button variant=\"light\" onClick={() => handleDelete(item._id)}>Delete</Button>\r\n                </div>\r\n            </Card>\r\n        ))\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { NavLink} from 'react-router-dom'\r\nimport { LOGOUT_INIT, LOGOUT_FAILURE, LOGOUT_SUCCESS } from \"../actionTypes\"\r\nimport { logout } from \"../api\"\r\n\r\nexport default function Logout({auth, dispatch}) {\r\n    const message = auth.message\r\n    const token = auth.token\r\n\r\n    useEffect(() => {\r\n        \r\n        const handleLogout = async () => {\r\n            dispatch({ type: LOGOUT_INIT })\r\n            try {\r\n                const result = await logout(token)\r\n                localStorage.removeItem('token')\r\n                dispatch({ type: LOGOUT_SUCCESS, payload: result })\r\n            } catch (error) {\r\n                localStorage.removeItem('token')\r\n                dispatch({ type: LOGOUT_FAILURE, payload: error.message })\r\n            }\r\n        }\r\n        handleLogout()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"pt-2\">\r\n            {auth.isLoading && <p className=\"text-primary\">Loading...</p>}\r\n            \r\n            {(message.type === LOGOUT_SUCCESS || message.type === LOGOUT_FAILURE)  && (\r\n                <Alert variant={message.type === LOGOUT_SUCCESS ? 'success': 'danger'}>\r\n                    <Alert.Heading>{message.type === LOGOUT_SUCCESS ? 'Success': 'Error'}</Alert.Heading>\r\n                    <p>{message.text}</p>\r\n                    <p>{message.type === LOGOUT_SUCCESS ? <NavLink to=\"/signin\">Login again</NavLink> : 'You are not Logged in'}</p>\r\n                </Alert>\r\n            )}\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default function NoMatch() {\r\n    return (\r\n        <Container className=\"text-center pt-5\">\r\n            <h3>404 - Page Not Found</h3>\r\n            <p>The page is missing.</p>\r\n        </Container>\r\n    )   \r\n}","import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function Details(props) {\r\n    let { id } = useParams()\r\n    return (\r\n        <Container>\r\n            <h1>Details</h1>\r\n            <p>{id}</p>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React, {useReducer} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport authReducer from \"./reducer/authReducer\"\nimport Header from './component/Header'\nimport Home from './component/Home'\nimport SubmitAd from './component/SubmitAd'\nimport Signin from './component/Signin'\nimport Signup from './component/Signup'\nimport MyAccount from './component/MyAccount';\nimport Logout from './component/Logout'\nimport './App.css';\nimport NoMatch from './component/NoMatch';\nimport Details from './component/Details'\n\nfunction App() {\n  const initalState = {\n    isAuthenticated: localStorage.getItem('token') ? true : false,\n    token: localStorage.getItem('token'),\n    user: localStorage.getItem('user'),\n    message: {}\n  }\n  const [auth, dispatch] = useReducer(authReducer, initalState )\n  \n  return (\n    <Router>\n      <Header auth={auth} />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n        <Route path=\"/vehicle/:id\">\n          <Details/>\n        </Route>\n        <Route path=\"/signin\">\n          <Signin auth={auth} dispatch={dispatch} />\n        </Route>\n        <Route path=\"/user/logout\">\n          <Logout auth={auth} dispatch={dispatch} />\n        </Route>\n        <PrivateRoute path=\"/user\" auth={auth}>\n          {/* Never use exact */}\n          <MyAccount />\n        </PrivateRoute>\n        <PrivateRoute path=\"/submitad\" auth={auth}>\n          <SubmitAd auth={auth} />\n        </PrivateRoute>\n        <Route path=\"/signup\">\n          <Signup auth={auth} dispatch={dispatch} />\n        </Route>\n        <Route path=\"/*\">\n          <NoMatch/>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, auth, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.isAuthenticated ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}